{"ast":null,"code":"var _jsxFileName = \"C:\\\\Works\\\\React\\\\reactblog\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./singlePost.css\";\nimport { useLocation } from \"react-router\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const PF = \"http://localhost:5000/images/\";\n  useEffect(() => {\n    getPost(path);\n  }, [path]);\n\n  const getPost = async postId => {\n    const res = await axios.get(\"/posts/\" + postId);\n    setPost(res.data.data);\n    setTitle(res.data.data.title);\n    setDesc(res.data.data.desc);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(\"/posts/\" + path, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author :\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/?user=\" + post.username,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [new Date(post.createdAt).getDate(), \"/\", new Date(post.createdAt).getMonth(), \"/\", new Date(post.createdAt).getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"G\\xFCncelle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Works/React/reactblog/client/src/components/singlePost/SinglePost.jsx"],"names":["useLocation","useContext","useEffect","useState","axios","Link","Context","SinglePost","location","path","pathname","split","post","setPost","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","PF","getPost","postId","res","get","data","handleDelete","delete","username","window","replace","error","console","log","handleUpdate","put","photo","e","target","value","Date","createdAt","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import \"./singlePost.css\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport default function SinglePost() {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n  const { user } = useContext(Context);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const PF = \"http://localhost:5000/images/\";\r\n\r\n  useEffect(() => {\r\n    getPost(path);\r\n  }, [path]);\r\n\r\n  const getPost = async (postId) => {\r\n    const res = await axios.get(\"/posts/\" + postId);\r\n    setPost(res.data.data);\r\n    setTitle(res.data.data.title);\r\n    setDesc(res.data.data.desc);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(\"/posts/\" + path, {\r\n        data: { username: user.username },\r\n      });\r\n      window.location.replace(\"/\");\r\n    } catch (error) {console.log(error)}\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(\"/posts/\" + path, {\r\n         username: user.username,title,desc\r\n      });\r\n      setUpdateMode(false);\r\n    } catch (error) {console.log(error)}\r\n  };\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        {post.photo && (\r\n          <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\r\n        )}\r\n\r\n        {updateMode ? (\r\n          <input type=\"text\" value={title} className=\"singlePostTitleInput\" autoFocus={true} onChange={(e) => setTitle(e.target.value)}/>\r\n        ) : (\r\n          <h1 className=\"singlePostTitle\">\r\n            {title}\r\n            {post.username === user.username && (\r\n              <div className=\"singlePostEdit\">\r\n                <i\r\n                  className=\"singlePostIcon far fa-edit\"\r\n                  onClick={() => setUpdateMode(true)}\r\n                ></i>\r\n                <i\r\n                  className=\"singlePostIcon far fa-trash-alt\"\r\n                  onClick={handleDelete}\r\n                ></i>\r\n              </div>\r\n            )}\r\n          </h1>\r\n        )}\r\n        <div className=\"singlePostInfo\">\r\n          <span className=\"singlePostAuthor\">\r\n            Author :\r\n            <Link to={\"/?user=\" + post.username} className=\"link\">\r\n              <b> {post.username}</b>\r\n            </Link>\r\n          </span>\r\n          <span className=\"singlePostDate\">\r\n            {new Date(post.createdAt).getDate()}/\r\n            {new Date(post.createdAt).getMonth()}/\r\n            {new Date(post.createdAt).getFullYear()}\r\n          </span>\r\n        </div>\r\n        {updateMode ? <textarea className=\"singlePostDescInput\" value={desc} onChange={(e) => setDesc(e.target.value)}/> : (\r\n          <p className=\"singlePostDesc\">{desc}</p>\r\n        )}\r\n        {updateMode && \r\n          <button type=\"button\" className=\"singlePostButton\" onClick={handleUpdate}>Güncelle</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}